{"version":3,"sources":["webpack:///./src/pages/books.js"],"names":["BooksPage","data","pageName","allMarkdownRemark","edges","map","edge","node","fields","slug","split","frontmatter","title","author","dangerouslySetInnerHTML","__html","html"],"mappings":"m8kBAmEeA,UA3DG,WAChB,IAAMC,EAAI,OAqBV,OACE,kBAAC,IAAD,CAAQC,SAAS,SACf,kBAAC,IAAD,KACE,yCAEF,kBAAC,IAAD,KACE,6DACA,sKACA,6BACA,uIACA,6BACA,6BACA,4BACGD,EAAKE,kBAAkBC,MAAMC,KAAI,SAACC,GAAU,IACpCC,EAAQD,EAARC,KAGP,GAAoC,SAAjCA,EAAKC,OAAOC,KAAKC,MAAM,KAAK,GAC3B,OACI,4BACI,4BAAKH,EAAKI,YAAYC,OACtB,4BAAKL,EAAKI,YAAYE,QACtB,yBACIC,wBAAyB,CAACC,OAAOR,EAAKS","file":"component---src-pages-books-js-edb85f0e0ec9d148c1ef.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\";\n\nimport Layout from \"components/Layout\";\nimport Container from \"components/Container\";\n\nconst BooksPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        edges {\n          node {\n            frontmatter {\n              title\n              author\n            }\n            html\n            excerpt\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  \n  return (\n    <Layout pageName=\"books\">\n      <Helmet>\n        <title>Books</title>\n      </Helmet>\n      <Container>\n        <h1>Books that I find interesting</h1>\n        <h4>Below are good points & notes that I made while reading books that have helped me. This is not a exhaustive list of books that I like.</h4>\n        <br/>\n        <h4>Also, feel free to contact me to discuss on any of the books mentioned below or any of your suggestions</h4>\n        <br/>\n        <br/>\n        <ol>\n          {data.allMarkdownRemark.edges.map((edge) => {\n            const {node} = edge\n            \n            //checking the type of md            \n            if(node.fields.slug.split(\"-\")[0]===\"book\"){\n                return (\n                    <li>\n                        <h3>{node.frontmatter.title}</h3>\n                        <h4>{node.frontmatter.author}</h4>\n                        <div\n                            dangerouslySetInnerHTML={{__html:node.html}}\n                        />                        \n                    </li>\n                  );\n            }\n\n            return undefined\n          })}\n        </ol>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default BooksPage;\n"],"sourceRoot":""}